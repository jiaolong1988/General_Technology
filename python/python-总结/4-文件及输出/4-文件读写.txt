path = "c:\\foo.txt"

# r:读 w:写 a:追加, rb,wb,ab：是以二进制的方式进行操作
with open(path,'a')as f:
    value = str(('www.runoob.com',14)) + '\n'
    f.write(value)
    f.write('Python 是一个非常好的语言。\n是的，的确非常好!!\n')

#是迭代一个文件对象然后读取每行
with open(path, "r") as f:
	for line in f:
		print(line, end='')


print('-----------pickle序列化数据--------------')
# python的pickle模块实现了基本的数据序列和反序列化。使我们能够将程序中运行的对象信息保存到文件中去，永久存储。
# 通过pickle 将数据序列化到文件中。

import pickle
data = {'a': [1, 4.0, 67, 4+6j],
         'b': ('string', u'Unicode string'),
         'c': 'jiaolong'}

# 以二进制 方式写入数据
with open('mydata.pkl', 'wb') as f:
	pickle.dump(data, f)

#以二进制方式从文件读取pickle数据
with open('mydata.pkl', 'rb') as f:
	data = pickle.load(f)
	
序列化文件案例、
import pickle
data = {'a':1, 'b':2, 'c':3}

def readMydata():
    '''
    读取序列化文件mydata.pkl
    '''
    with open('mydata.pkl', 'rb') as f:
        data = pickle.load(f)
    return data

def writeMydata(data):
    '''
    将数据写入序列化文件mydata.pkl
    '''
    with open('mydata.pkl', 'wb') as f:
        pickle.dump(data, f)

def updateMydata(name,value):
    '''
    修改序列化文件中的数据
    '''
    data = readMydata()
    #修改数据
    data[name] = value
    writeMydata(data)

#测试
if __name__ == '__main__':
    updateMydata('a',10)
    data = readMydata()
    print(data)
