# Python对with的处理还很聪明,基本思想是with所求值的对象必须有一个__enter__()方法，一个__exit__()方法。
# 紧跟with后面的语句被求值后，返回对象的__enter__()方法被调用，这个方法的返回值将被赋值给as后面的变量。
# 当with后面的代码块全部被执行完之后，将调用前面返回对象的__exit__()方法。

# https://www.cnblogs.com/DswCnblog/p/6126588.html
# 总结：with后面的代码块抛出任何异常时，__exit__()方法被执行
class Sample:
    def __enter__(self):
        print("1-先调用：In __enter__()")
        return self

    def __exit__(self, type, value, trace):
        print("最后执行__exit__方法")
        print("异常类名称:", type)
        print("异常描述:", value)
        print("异常位置:", trace)

    def do_something(self):
        bar = 1/0
        return bar + 10

with Sample() as sample:
    print('2-开始执行程序')
    sample.do_something()
