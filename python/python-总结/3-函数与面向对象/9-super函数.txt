super() 函数是用于调用父类(超类)的一个方法。
Python3.x 和 Python2.x 的一个区别是: Python 3 可以使用直接使用 super().xxx 代替 super(Class, self).xxx :
http://www.runoob.com/python/python-func-super.html

#FooParent继承object
class FooParent(object):
    def __init__(self):
        #设置FooParent的属性
        self.parent = 'I\'m the parent.'
        print ('Parent')
    
    def bar(self,message):
        print ("%s from Parent" % message)
 
#继承父类FooParent
class FooChild(FooParent):
    def __init__(self):
        super(FooChild,self).__init__()  
        #super().__init__()    
        
        print ('Child')
        
    def bar(self,message):
        super().bar(message)
        print ('Child bar fuction')
        print (self.parent)
 
if __name__ == '__main__':
    print('=======先初始化父类，然后在初始化父类===============')
    fooChild = FooChild()
    
    print('=======super() 函数用于直接调用父类===============')
    fooChild.bar('HelloWorld')

    print('\nPython3.x 和 Python2.x 的一个区别是: Python 3 可以使用直接使用 super().xxx 代替 super(Class, self).xxx ')